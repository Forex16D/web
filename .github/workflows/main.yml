name: forex16d CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest  # Removed container: block to give more disk and Docker support
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose (if needed)
        run: |
          docker-compose version || (
            curl -L "https://github.com/docker/compose/releases/download/v2.34.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose &&
            chmod +x /usr/local/bin/docker-compose &&
            docker-compose --version
          )

      - name: Create .env server file
        run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> ./server/.env
          echo "SECRET_KEY_BOT_TOKEN=${{ secrets.SECRET_KEY_BOT_TOKEN }}" >> ./server/.env
          echo "SLIPOK_API_KEY=${{ secrets.SLIPOK_API_KEY }}" >> ./server/.env
          echo "FLASK_APP=app" >> ./server/.env
          echo "FLASK_DEBUG=1" >> ./server/.env
          echo "TV_EMAIL=${{ secrets.TV_EMAIL }}" >> ./server/.env
          echo "TV_PASSWORD=${{ secrets.TV_PASSWORD }}" >> ./server/.env

      - name: Create .env file for Docker Compose
        run: |
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env

      - name: Build and run containers with Docker Compose
        run: |
          docker-compose -f docker-compose.yml --env-file .env up --build -d

      - name: Wait for containers to be ready
        run: sleep 10

      - name: Stop Docker containers
        run: docker-compose down
